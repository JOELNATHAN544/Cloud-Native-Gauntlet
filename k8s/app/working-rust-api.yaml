apiVersion: apps/v1
kind: Deployment
metadata:
  name: rust-api
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rust-api
  template:
    metadata:
      labels:
        app: rust-api
    spec:
      containers:
      - name: rust-api
        image: busybox:1.35
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo -e 'HTTP/1.1 200 OK\\r\\nContent-Type: application/json\\r\\n\\r\\n{\"status\":\"OK\",\"message\":\"Cloud-Native Gauntlet Rust API is running!\",\"endpoints\":[\"/health\",\"/api/tasks\",\"/api/auth/login\"]}' | nc -l -p 3000; done"]
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: rust-api
  namespace: app
spec:
  selector:
    app: rust-api
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rust-api-ingress
  namespace: app
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  ingressClassName: traefik
  rules:
  - host: api.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rust-api
            port:
              number: 80

